name: build

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Version
        id: version
        uses: twopow/auto-version-action@v1

      - name: update version.txt
        id: version-txt
        run: |
          echo -n "${{ steps.version.outputs.version }}" >version.txt
          echo "${{ steps.version.outputs.shortlog }}" >shortlog.txt
          echo "container=${{ inputs.artifact-image }}:${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Registry auth
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: .ci/Dockerfile
          context: .

          build-args: |
            VERSION=${{ steps.version.outputs.version }}
            ACTIONS_RUN_ID=${{ github.run_id }}
            ACTIONS_RUN_NUMBER=${{ github.run_number }}
            ACTIONS_RUN_ATTEMPT=${{ github.run_attempt }}

          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
